# Generated by Django 3.0.7 on 2020-07-10 18:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(blank=True, choices=[(1, '1 - Critical'), (2, '2 - High'), (3, '3 - Moderate'), (4, '4 - Low'), (5, '5 - Planning')], max_length=30, null=True)),
                ('short_description', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('work_notes', models.TextField(blank=True, null=True)),
                ('additional_comments', models.TextField(blank=True, null=True)),
                ('sys_created_on', models.DateTimeField(auto_now_add=True)),
                ('sys_updated_on', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('assignment_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(blank=True, choices=[(1, '1 - Critical'), (2, '2 - High'), (3, '3 - Moderate'), (4, '4 - Low'), (5, '5 - Planning')], max_length=1, null=True)),
                ('state', models.CharField(blank=True, choices=[('draft', 'Draft'), ('planning', 'Planning'), ('current', 'Current'), ('complete', 'Complete'), ('cancelled', 'Cancelled')], max_length=50, null=True)),
                ('short_description', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('work_notes', models.TextField(blank=True, null=True)),
                ('additional_comments', models.TextField(blank=True, null=True)),
                ('planned_start_date', models.DateField(blank=True, null=True)),
                ('planned_end_date', models.DateField(blank=True, null=True)),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('sys_created_on', models.DateTimeField(auto_now_add=True)),
                ('sys_updated_on', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('assignment_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(blank=True, choices=[(1, '1 - Critical'), (2, '2 - High'), (3, '3 - Moderate'), (4, '4 - Low'), (5, '5 - Planning')], max_length=30, null=True)),
                ('short_description', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('work_notes', models.TextField(blank=True, null=True)),
                ('additional_comments', models.TextField(blank=True, null=True)),
                ('sys_created_on', models.DateTimeField(auto_now_add=True)),
                ('sys_updated_on', models.DateTimeField(auto_now=True)),
                ('points', models.IntegerField(blank=True, default=5, null=True)),
                ('blocked', models.BooleanField(blank=True, default=False, null=True)),
                ('reason_of_blockage', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, choices=[('draft', 'Draft'), ('ready', 'Ready'), ('wip', 'Work in Progress'), ('rft', 'Ready for Testing'), ('complete', 'Complete'), ('cancelled', 'Cancelled')], max_length=50, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('assignment_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('sprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agile_development.Sprint')),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(blank=True, max_length=100, null=True)),
                ('short_description', models.CharField(blank=True, max_length=400, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sys_created_on', models.DateTimeField(auto_now_add=True)),
                ('sys_updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Defect',
            fields=[
                ('feature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='agile_development.Feature')),
                ('state', models.CharField(blank=True, choices=[('draft', 'Draft'), ('planning', 'Planning'), ('wip', 'Work in Progress'), ('complete', 'Complete'), ('cancelled', 'Cancelled')], max_length=50, null=True)),
                ('feature_type', models.CharField(choices=[('D', 'Defect'), ('EN', 'Enhancement'), ('EP', 'Epic')], default='D', max_length=5)),
            ],
            bases=('agile_development.feature',),
        ),
        migrations.CreateModel(
            name='Enhancement',
            fields=[
                ('feature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='agile_development.Feature')),
                ('state', models.CharField(blank=True, choices=[('draft', 'Draft'), ('planning', 'Planning'), ('wip', 'Work in Progress'), ('complete', 'Complete'), ('cancelled', 'Cancelled')], max_length=50, null=True)),
                ('feature_type', models.CharField(choices=[('D', 'Defect'), ('EN', 'Enhancement'), ('EP', 'Epic')], default='EN', max_length=5)),
            ],
            bases=('agile_development.feature',),
        ),
        migrations.CreateModel(
            name='Epic',
            fields=[
                ('feature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='agile_development.Feature')),
                ('state', models.CharField(blank=True, choices=[('draft', 'Draft'), ('planning', 'Planning'), ('wip', 'Work in Progress'), ('complete', 'Complete'), ('cancelled', 'Cancelled')], max_length=50, null=True)),
                ('feature_type', models.CharField(choices=[('D', 'Defect'), ('EN', 'Enhancement'), ('EP', 'Epic')], default='EP', max_length=5)),
            ],
            bases=('agile_development.feature',),
        ),
        migrations.CreateModel(
            name='StoryDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sys_created_on', models.DateTimeField(auto_now_add=True)),
                ('sys_updated_on', models.DateTimeField(auto_now=True)),
                ('dependent_story', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agile_development.Story')),
                ('prerequisite_story', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prerequisite', to='agile_development.Story')),
            ],
        ),
        migrations.AddField(
            model_name='story',
            name='theme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agile_development.Theme'),
        ),
        migrations.CreateModel(
            name='ScrumTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('remaining_hours', models.CharField(blank=True, max_length=40, null=True)),
                ('percent_complete', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, choices=[('draft', 'Draft'), ('planning', 'Planning'), ('wip', 'Work in Progress'), ('complete', 'Complete'), ('cancelled', 'Cancelled')], max_length=50, null=True)),
                ('type', models.CharField(blank=True, choices=[('analysis', 'Analysis'), ('coding', 'Coding'), ('testing', 'Testing')], max_length=50, null=True)),
                ('blocked', models.BooleanField(default=False)),
                ('blocked_reason', models.CharField(blank=True, max_length=300, null=True)),
                ('short_description', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('close_notes', models.TextField(blank=True, null=True)),
                ('sys_created_on', models.DateTimeField(auto_now_add=True)),
                ('sys_updated_on', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('assignment_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agile_development.ScrumTask')),
                ('story', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agile_development.Story')),
            ],
        ),
        migrations.AddField(
            model_name='story',
            name='defect',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defects', to='agile_development.Defect'),
        ),
        migrations.AddField(
            model_name='story',
            name='enhancement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enhancements', to='agile_development.Enhancement'),
        ),
        migrations.AddField(
            model_name='story',
            name='epic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='epics', to='agile_development.Epic'),
        ),
    ]
